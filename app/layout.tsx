import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";
import { Geist_Mono, Source_Sans_3, Inconsolata } from "next/font/google";
import "./globals.css";
import { ConvexAuthNextjsServerProvider } from "@convex-dev/auth/nextjs/server";
import ConvexClientProvider from "@/components/ConvexClientProvider";
import Header from "@/components/Header";
const geistSans = Source_Sans_3({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  display: "block",
});

const inconsolata = Inconsolata({
  variable: "--font-inconsolata",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  display: "block",
});

export const metadata: Metadata = {
  title: "Optimised",
  description: "Generated by npm create convex",
  icons: {
    icon: "/code.png",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ConvexAuthNextjsServerProvider>
      {/* `suppressHydrationWarning` only affects the html tag,
      // and is needed by `ThemeProvider` which sets the theme
      // class attribute on it */}
      <html lang="en" suppressHydrationWarning>
        <ConvexClientProvider>
          <body
            className={`dark min-h-screen relative ${geistSans.className} antialiased`}
          >

            <div
              style={{
                backgroundImage: `url('/grain.jpg')`,
              }}
              className="absolute inset-0 -z-30 opacity-5" />
            <Header />
            <ThemeProvider attribute="class">{children}</ThemeProvider>
          </body>
        </ConvexClientProvider>

      </html>
    </ConvexAuthNextjsServerProvider>
  );
}
